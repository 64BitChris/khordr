package interception;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class InterceptionKeyStroke extends Structure<InterceptionKeyStroke, InterceptionKeyStroke.ByValue, InterceptionKeyStroke.ByReference > {
    public short code;
    public short state;
    public int information;
    public InterceptionKeyStroke() {
        super();
        initFieldOrder();
    }
    protected void initFieldOrder() {
        setFieldOrder(new String[]{"code", "state", "information"});
    }
    public InterceptionKeyStroke(short code, short state, int information) {
        super();
        this.code = code;
        this.state = state;
        this.information = information;
        initFieldOrder();
    }
    protected ByReference newByReference() { return new ByReference(); }
    protected ByValue newByValue() { return new ByValue(); }
    protected InterceptionKeyStroke newInstance() { return new InterceptionKeyStroke(); }
    public static InterceptionKeyStroke[] newArray(int arrayLength) {
        return Structure.newArray(InterceptionKeyStroke.class, arrayLength);
    }
    public static class ByReference extends InterceptionKeyStroke implements Structure.ByReference {
		
    };
    public static class ByValue extends InterceptionKeyStroke implements Structure.ByValue {
		
    };
}

package interception;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class InterceptionMouseStroke extends Structure<InterceptionMouseStroke, InterceptionMouseStroke.ByValue, InterceptionMouseStroke.ByReference > {
    public short state;
    public short flags;
    public short rolling;
    public int x;
    public int y;
    public int information;
    public InterceptionMouseStroke() {
        super();
        initFieldOrder();
    }
    protected void initFieldOrder() {
        setFieldOrder(new String[]{"state", "flags", "rolling", "x", "y", "information"});
    }
    public InterceptionMouseStroke(short state, short flags, short rolling, int x, int y, int information) {
        super();
        this.state = state;
        this.flags = flags;
        this.rolling = rolling;
        this.x = x;
        this.y = y;
        this.information = information;
        initFieldOrder();
    }
    protected ByReference newByReference() { return new ByReference(); }
    protected ByValue newByValue() { return new ByValue(); }
    protected InterceptionMouseStroke newInstance() { return new InterceptionMouseStroke(); }
    public static InterceptionMouseStroke[] newArray(int arrayLength) {
        return Structure.newArray(InterceptionMouseStroke.class, arrayLength);
    }
    public static class ByReference extends InterceptionMouseStroke implements Structure.ByReference {
		
    };
    public static class ByValue extends InterceptionMouseStroke implements Structure.ByValue {
		
    };
}
